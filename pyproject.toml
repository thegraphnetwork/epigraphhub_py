# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "epigraphhub"
version = "2.1.0"  # changed by semantic-release
description = "Epigraphhub Python package"
readme = "README.md"
authors = ["thegraphnetwork <fccoelho@gmail.com>"]
license = "GNU GPL v3.0"
repository = "https://github.com/thegraphnetwork/epigraphhub_py"
homepage = "https://github.com/thegraphnetwork/epigraphhub_py"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = ['epidemiology']  #! Update me

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
]

[tool.poetry.scripts]
# Entry points for the package https://python-poetry.org/docs/pyproject/#scripts
"epigraphhub" = "epigraphhub.__main__:app"
"epigraphhub-config" = "epigraphhub.utils._config:create_file"

[tool.poetry.dependencies]
python = ">=3.9,<3.11"

typer = {extras = ["all"], version = "^0.4.0"}
rich = ">=12.4.4,<13"
numpy = "^1.20.3"
pandas = "^1.2"
scipy = "^1.8.0"
sshtunnel = "^0.4.0"
SQLAlchemy = ">= 1.4.29,<2.0.0"
psycopg2-binary = "^2.9.3"
joblib = "^1.1.0"
wbgapi = "^1.0.7"
rioxarray = "^0.10.2"
wget = "^3.2"
tabulate = "^0.8.9"
click = "^8.1.0"
PyYAML = "^5.0"
pymc = "^4.2.0"
loguru = "^0.6.0"
sodapy = "^2.2.0"
pangres = "^4.1.2"
ibis-framework = "^3.2.0"
jupyter = "^1.0.0"
GeoAlchemy2 = "^0.10.0"
geopandas = "^0.10.2"
# [viz]
arviz = {version = "^0.12.0", optional = true}
matplotlib = {version = "^3.5.1", optional = true}
plotly =  {version = "^5", optional = true}
# [ml]
pytrends = {version = "^4.7.3", optional = true}
tensorflow = {version = "^2.5.0", optional = true}
scikit-learn = {version = "^1.0.2", optional = true}
ngboost = {version = "^0.3.13", optional = true}

[tool.poetry.extras]
ml = ["pytrends", "tensorflow", "scikit-learn", "ngboost"]
viz = ["matplotlib", "plotly", "arviz"]

[tool.poetry.dev-dependencies]
bandit = "^1.7.2"
black = {version = "^22.1", allow-prereleases = true}
darglint = "^1.8.1"
isort = {extras = ["colors"], version = "^5.10.1"}
mypy = "^0.910"
mypy-extensions = "^0.4.3"
pre-commit = "^2.15.0"
pydocstyle = "^6.1.1"
pylint = "^2.11.1"
pytest = "^7.0.1"
pyupgrade = "^2.29.1"
safety = "^1.10.3"
coverage = "^6.3"
coverage-badge = "^1.1.0"
pytest-html = "^3.1.1"
pytest-cov = "^3.0.0"
Sphinx = "^4.4.0"
myst-parser = "^0.17.0"
sphinx-pyproject = "^0.1.0"
nbsphinx = "^0.8.8"

[tool.poetry.group.dev.dependencies]
makim = "1.6.4"
containers-sugar = "1.4.2"
pysus = "^0.8.0"

[tool.black]
# https://github.com/psf/black
target-version = ["py39"]
line-length = 88
color = true
exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 39
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.9
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.sphinx-pyproject]
github_username = "thegraphnetwork"
github_repository = "epigraphhub_py"
author = "Flávio Codeço Coelho"
project = "epigraphhub"
copyright = "2022 The Graph Network"
language = "en"
package_root = "epigraphhub"

[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "epigraphhub_py"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
